[{"path":"https://jef.works/SEraster/articles/formatting-SpatialExperiment-for-SEraster.html","id":"formatting-a-spatialexperiment-object-for-seraster","dir":"Articles","previous_headings":"","what":"Formatting a SpatialExperiment Object for SEraster","title":"Formatting a SpatialExperiment Object for SEraster","text":"tutorial, format preprocessed MERFISH dataset mouse preotic area (POA) SpatialExperiment can rasterized SEraster. output tutorial merfish_mousePOA dataset package. original work, Moffitt J. Bambah-Mukku D. et al. (2018), “Molecular, spatial, functional single-cell profiling hypothalamic preoptic region”, Science Advances, authors collected spatial transcriptomics datasets mouse POA regions various sexes, behavioral conditions, bregma sections. full dataset can downloaded Dryad. use dataset bregma -0.29 slice female naive animal (Animal ID = 1, Animal Sex = “Female”, Behavior = “Naive”, Bregma = “-0.29”).","code":""},{"path":"https://jef.works/SEraster/articles/formatting-SpatialExperiment-for-SEraster.html","id":"load-libraries","dir":"Articles","previous_headings":"Formatting a SpatialExperiment Object for SEraster","what":"Load libraries","title":"Formatting a SpatialExperiment Object for SEraster","text":"","code":"library(SpatialExperiment) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, #>     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, #>     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, #>     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, #>     table, tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following object is masked from 'package:utils': #>  #>     findMatches #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians library(Matrix) #>  #> Attaching package: 'Matrix' #> The following object is masked from 'package:S4Vectors': #>  #>     expand library(ggplot2)"},{"path":"https://jef.works/SEraster/articles/formatting-SpatialExperiment-for-SEraster.html","id":"load-the-subsetted-dataset","dir":"Articles","previous_headings":"Formatting a SpatialExperiment Object for SEraster","what":"Load the subsetted dataset","title":"Formatting a SpatialExperiment Object for SEraster","text":"","code":"data_sub <- readRDS(file = \"merfish_mousePOA_raw.RDS\") dim(data_sub) #> [1] 6509  170"},{"path":"https://jef.works/SEraster/articles/formatting-SpatialExperiment-for-SEraster.html","id":"process-dataset","dir":"Articles","previous_headings":"Formatting a SpatialExperiment Object for SEraster","what":"Process dataset","title":"Formatting a SpatialExperiment Object for SEraster","text":"subsetted cells. rasterizing gene expression SEraster, input SpatialExperiment needs genes--cells matrix (either dense sparse matrix) assay slot spatial coordinates matrix spatialCoords slot. rasterizing cell-type labels SEraster, addition spatial coordinates matrix spatialCoords splot, input SpatialExperiment also need data frame column cell-type labels colData slot. Thus, , extract genes--cells matrix, spatial coordinates matrix, data frame cell-type labels. Remove genes cells NaN values. Plot total gene expression single-cell resolution verification.  Plot cell-type labels single-cell resolution verification.","code":"## genes-by-cells matrix # extract the genes-by-cells matrix as a sparse matrix (dgCMatrix) mat <- as(t(data_sub[,10:ncol(data_sub)]), \"CsparseMatrix\")  # remove blank genes used for quality control blanks <- rownames(mat)[grepl(\"Blank\", rownames(mat))] mat <- mat[setdiff(rownames(mat),blanks),]  ## spatial coordinates matrix # extract the spatial coordinates pos <- data_sub[,c(\"Centroid_X\", \"Centroid_Y\")] colnames(pos) <- c(\"x\",\"y\")  # make x,y coordinates positive pos[,1] <- pos[,1] - min(pos[,1]) pos[,2] <- pos[,2] - min(pos[,2])  ## cell-type labels # extract the data frame with cell-type labels meta <- data_sub[,c(\"Bregma\", \"Cell_class\", \"Neuron_cluster_ID\")] colnames(meta) <- c(\"bregma\", \"celltype\", \"neurontype\")  ## standardize cell IDs for the extracted objects colnames(mat) <- rownames(pos) <- rownames(meta) <- data_sub$Cell_ID ## filter genes with NaN values bad_genes <- names(which(rowSums(is.nan(mat)) > 0))  mat <- mat[setdiff(rownames(mat),bad_genes),]  ## filter cells with NaN values bad_cells <- names(which(colSums(is.nan(mat)) > 0)) mat <- mat[,setdiff(colnames(mat),bad_cells)] pos <- pos[setdiff(rownames(pos),bad_cells),] meta <- meta[setdiff(rownames(pos),bad_cells),] df_plt <- data.frame(pos, total_gexp = colSums(mat))  ggplot(df_plt, aes(x = x, y = y, color = total_gexp)) +   coord_fixed() +   geom_point(size = 1.5, stroke = 0) +   scale_color_viridis_c(name = \"total gene expression\") +   theme_bw() +   theme(panel.grid = element_blank(),         axis.title = element_blank(),         axis.text = element_blank(),         axis.ticks = element_blank()) df_plt <- data.frame(pos, celltype = meta$celltype)  ggplot(df_plt, aes(x = x, y = y, color = celltype)) +   coord_fixed() +   geom_point(size = 1.5, stroke = 0) +   theme_bw() +   theme(panel.grid = element_blank(),         axis.title = element_blank(),         axis.text = element_blank(),         axis.ticks = element_blank())"},{"path":"https://jef.works/SEraster/articles/formatting-SpatialExperiment-for-SEraster.html","id":"format-spatialexperiment-object","dir":"Articles","previous_headings":"Formatting a SpatialExperiment Object for SEraster","what":"Format SpatialExperiment object","title":"Formatting a SpatialExperiment Object for SEraster","text":"Format genes--cells matrix, spatial coordinates matrix, data frame cell-type labels SpatialExperiment object. , genes--cells matrix named “volnorm” loaded gene expression already normalized cell volume scaled 1000.","code":"spe <- SpatialExperiment::SpatialExperiment(   assays = list(volnorm = mat),   spatialCoords = as.matrix(pos),   colData = meta ) sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: aarch64-apple-darwin20 (64-bit) #> Running under: macOS Ventura 13.4 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/New_York #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ggplot2_3.5.1               Matrix_1.6-5                #>  [3] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0 #>  [5] SummarizedExperiment_1.30.2 Biobase_2.60.0              #>  [7] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4         #>  [9] IRanges_2.34.1              S4Vectors_0.38.2            #> [11] BiocGenerics_0.46.0         MatrixGenerics_1.12.3       #> [13] matrixStats_1.3.0           #>  #> loaded via a namespace (and not attached): #>  [1] tidyselect_1.2.1          viridisLite_0.4.2         #>  [3] dplyr_1.1.4               farver_2.1.1              #>  [5] R.utils_2.12.3            bitops_1.0-7              #>  [7] fastmap_1.1.1             RCurl_1.98-1.14           #>  [9] digest_0.6.35             lifecycle_1.0.4           #> [11] magrittr_2.0.3            compiler_4.3.1            #> [13] rlang_1.1.3               sass_0.4.9                #> [15] tools_4.3.1               utf8_1.2.4                #> [17] yaml_2.3.8                knitr_1.45                #> [19] S4Arrays_1.0.6            labeling_0.4.3            #> [21] dqrng_0.3.2               DelayedArray_0.26.7       #> [23] abind_1.4-5               BiocParallel_1.36.0       #> [25] HDF5Array_1.28.1          withr_3.0.0               #> [27] purrr_1.0.2               desc_1.4.3                #> [29] R.oo_1.26.0               grid_4.3.1                #> [31] fansi_1.0.6               beachmat_2.16.0           #> [33] colorspace_2.1-0          Rhdf5lib_1.22.1           #> [35] edgeR_3.42.4              scales_1.3.0              #> [37] cli_3.6.2                 rmarkdown_2.26            #> [39] crayon_1.5.2              ragg_1.3.0                #> [41] generics_0.1.3            rstudioapi_0.16.0         #> [43] rjson_0.2.21              DelayedMatrixStats_1.22.6 #> [45] scuttle_1.10.3            cachem_1.0.8              #> [47] rhdf5_2.44.0              zlibbioc_1.46.0           #> [49] parallel_4.3.1            XVector_0.40.0            #> [51] vctrs_0.6.5               jsonlite_1.8.8            #> [53] systemfonts_1.0.6         magick_2.8.3              #> [55] locfit_1.5-9.9            limma_3.56.2              #> [57] jquerylib_0.1.4           glue_1.7.0                #> [59] pkgdown_2.0.7             DropletUtils_1.20.0       #> [61] codetools_0.2-20          gtable_0.3.5              #> [63] munsell_0.5.1             tibble_3.2.1              #> [65] pillar_1.9.0              htmltools_0.5.8.1         #> [67] rhdf5filters_1.12.1       GenomeInfoDbData_1.2.10   #> [69] R6_2.5.1                  textshaping_0.3.7         #> [71] sparseMatrixStats_1.12.2  evaluate_0.23             #> [73] lattice_0.22-6            highr_0.10                #> [75] R.methodsS3_1.8.2         memoise_2.0.1             #> [77] bslib_0.7.0               Rcpp_1.0.12               #> [79] xfun_0.43                 fs_1.6.3                  #> [81] pkgconfig_2.0.3"},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"getting-started-with-seraster","dir":"Articles","previous_headings":"","what":"Getting Started with SEraster","title":"Getting Started With SEraster","text":"tutorial walks basic functionalities SEraster two examples downstream analysis can performed rasterized spatial omics data. examples , assume input data provided SpatialExperiment Bioconductor object. Please refer following documentations see format data SpatialExperiment object: SpatialExperiment package Formatting SpatialExperiment Object SEraster merfish_mousePOA dataset downstream analyses, using nnSVG spatially variable gene (SVG) analysis CooccurrenceAffinity cell-type co-enrichment analysis. References nnSVG CooccurrenceAffinity can found : Weber, L. et al. (2023), “nnSVG scalable identification spatially variable genes using nearest-neighbor Gaussian processes”, Nature Communications Mainali, K. et al. (2021), “better index analysis co-occurrence similarity”, Science Advances Mainali,K. et al. (2022), “CooccurrenceAffinity: R package computing novel metric affinity co-occurrence data corrects pervasive errors traditional indices”, bioRxiv","code":""},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"load-libraries","dir":"Articles","previous_headings":"Getting Started with SEraster","what":"Load libraries","title":"Getting Started With SEraster","text":"","code":"library(SEraster) library(SpatialExperiment) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: 'MatrixGenerics' #> The following objects are masked from 'package:matrixStats': #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, aperm, append, as.data.frame, basename, cbind, #>     colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find, #>     get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply, #>     match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, #>     Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort, #>     table, tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: 'S4Vectors' #> The following object is masked from 'package:utils': #>  #>     findMatches #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: 'Biobase' #> The following object is masked from 'package:MatrixGenerics': #>  #>     rowMedians #> The following objects are masked from 'package:matrixStats': #>  #>     anyMissing, rowMedians library(nnSVG) library(CooccurrenceAffinity) #> Loading required package: BiasedUrn library(ggplot2)"},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"load-example-dataset","dir":"Articles","previous_headings":"Getting Started with SEraster","what":"Load example dataset","title":"Getting Started With SEraster","text":"MERFISH mouse preoptic area dataset contains 6,509 cells 16 cell-types.","code":"data(\"merfish_mousePOA\")  # check the dimension of the genes-by-cells matrix at single-cell resolution dim(merfish_mousePOA) #> [1]  155 6509  # check the number of cell-types length(unique(colData(merfish_mousePOA)$celltype)) #> [1] 16 # plot at single-cell resolution df <- data.frame(spatialCoords(merfish_mousePOA), celltype = colData(merfish_mousePOA)$celltype)  ggplot(df, aes(x = x, y = y, col = celltype)) +   coord_fixed() +   geom_point(size = 1.5, stroke = 0) +   guides(col = guide_legend(override.aes = list(size = 3))) +   labs(x = \"x (μm)\",        y = \"y (μm)\",        col = \"Cell-types\") +   theme_bw() +   theme(panel.grid = element_blank())"},{"path":[]},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"rasterize-gene-expression","dir":"Articles","previous_headings":"Getting Started with SEraster > SEraster basic functionalities","what":"Rasterize gene expression","title":"Getting Started With SEraster","text":"can see, SEraster aggregated 6,509 single cells 1,301 pixels.","code":"rastGexp <- SEraster::rasterizeGeneExpression(merfish_mousePOA, assay_name=\"volnorm\", resolution = 50)  # check the dimension of the genes-by-cells matrix after rasterizing gene expression dim(rastGexp) #> [1]  155 1301 # plot total rasterized gene expression SEraster::plotRaster(rastGexp, name = \"Total rasterized gene expression\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # plot a specific gene SEraster::plotRaster(rastGexp, feature_name = \"Esr1\", name = \"Esr1\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"rasterize-cell-type","dir":"Articles","previous_headings":"Getting Started with SEraster > SEraster basic functionalities","what":"Rasterize cell-type","title":"Getting Started With SEraster","text":"","code":"rastCt <- SEraster::rasterizeCellType(merfish_mousePOA, col_name = \"celltype\", resolution = 50)  # check the dimension of the cell-types-by-cells matrix after rasterizing cell-type labels dim(rastGexp) #> [1]  155 1301 # plot total cell counts SEraster::plotRaster(rastCt, name = \"cell counts\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # plot specific cell-type SEraster::plotRaster(rastCt, feature_name = \"Inhibitory\", name = \"Inhibitory neuron counts\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"rasterize-gene-expression-within-cell-type","dir":"Articles","previous_headings":"Getting Started with SEraster > SEraster basic functionalities","what":"Rasterize gene expression within cell-type","title":"Getting Started With SEraster","text":"","code":"## rasterize cell-type specific gene expression by subsetting to cell-type of interest ct_interest <- \"Inhibitory\" spe_subset <- merfish_mousePOA[,merfish_mousePOA$celltype == ct_interest]  ## rasterize gene expression rastGexpSubset <- SEraster::rasterizeGeneExpression(spe_subset, assay_name=\"volnorm\", resolution = 50) ## plot SEraster::plotRaster(rastGexpSubset, name = paste0(\"Total rast gexp in \", ct_interest)) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. SEraster::plotRaster(rastGexpSubset, feature_name = \"Esr1\", name = paste0(\"Esr1 in \", ct_interest)) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":[]},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"spatial-variable-gene-svg-analysis","dir":"Articles","previous_headings":"Getting Started with SEraster > Examples of downstream analyses after SEraster preprocessing","what":"Spatial variable gene (SVG) analysis","title":"Getting Started With SEraster","text":", use previously developed tool called nnSVG. Please refer nnSVG details package. can directly input rasterized gene expression SpatialExperiment object SEraster nnSVG.  can also perform cell-type specific SVG analysis subsetting dataset prior applying SEraster.","code":"# run nnSVG set.seed(0) rastGexp <- nnSVG(rastGexp, assay_name = \"pixelval\") # number of significant SVGs based on the selected adjusted p-value threshold table(rowData(rastGexp)$padj <= 0.05) #>  #> FALSE  TRUE  #>    17   138 # plot rasterized gene expression of top-ranked SVG top_svg <- which(rowData(rastGexp)$rank == 1) top_svg_name <- rownames(rowData(rastGexp))[top_svg] SEraster::plotRaster(rastGexp, feature_name = top_svg_name, name = top_svg_name) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # subset data ct_interest <- \"Excitatory\" spe_sub <- merfish_mousePOA[,merfish_mousePOA$celltype == ct_interest]  # run SEraster rastGexp_sub <- SEraster::rasterizeGeneExpression(spe_sub, assay_name=\"volnorm\", resolution = 50)  # run nnSVG set.seed(0) rastGexp_sub <- nnSVG(rastGexp_sub, assay_name = \"pixelval\") # number of significant SVGs table(rowData(rastGexp_sub)$padj <= 0.05) #>  #> FALSE  TRUE  #>    45   110 # plot rasterized gene expression of top-ranked SVG top_svg <- which(rowData(rastGexp_sub)$rank == 1) top_svg_name <- rownames(rowData(rastGexp_sub))[top_svg] SEraster::plotRaster(rastGexp_sub, feature_name = top_svg_name, name = top_svg_name) #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://jef.works/SEraster/articles/getting-started-with-SEraster.html","id":"cell-type-co-enrichment-analysis","dir":"Articles","previous_headings":"Getting Started with SEraster > Examples of downstream analyses after SEraster preprocessing","what":"Cell-type co-enrichment analysis","title":"Getting Started With SEraster","text":"Rasterized cell-type labels can used analyze pair-wise cell-type co-enrichment , binarize rasterized cell-type labels using relative enrichment metric previously developed tool called CooccurrenceAffinity. Please refer paper details methodology CooccurrenceAffinity details package.","code":"# extract cell-type labels ct_labels <- as.factor(colData(merfish_mousePOA)$celltype)  # compute relative enrichment (RE) metric mat <- assay(rastCt, \"pixelval\") mat_re <- do.call(rbind, lapply(rownames(rastCt), function(ct_label) {     mat[ct_label,] / (sum(mat[ct_label,]) / sum(mat) * colSums(mat)) })) rownames(mat_re) <- rownames(mat)  # binarize mat_bin <- ifelse(mat_re >= 1, 1, 0)  # add RE and binarized layers to SpatialExperiment object assays(rastCt) <- list(pixelval = assay(rastCt, \"pixelval\"), re = mat_re, bin = mat_bin) ct_interest <- \"Ependymal\"  # plot pixel value for a cell-type of interest plotRaster(rastCt, assay_name = \"pixelval\", feature_name = ct_interest, name = \"cell-type counts\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # plot RE value for a cell-type of interest plotRaster(rastCt, assay_name = \"re\", feature_name = ct_interest, name = \"RE\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # plot binarized value for a cell-type of interest plotRaster(rastCt, assay_name = \"bin\", feature_name = ct_interest, factor_levels = c(0,1), name = \"binarized\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one. # run CooccurrenceAffinity ct_coocc <- CooccurrenceAffinity::affinity(data = mat_bin, row.or.col = \"row\", squarematrix = c(\"all\")) #>  #> ------ as expected, the data ready for analysis has only 1 and 0... 1 = present, 0 = absent used for the interpretation ------ #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits #> Warning in AcceptAffCI(x, marg, lev, Int2): NAs introduced by coercion  #> Warning in AcceptAffCI(x, marg, lev, Int2): NAs introduced by coercion #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = Infty is capped, along with upper confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = Infty is capped, along with upper confidence limits #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits  #> Warning in AlphInts(x, marg, lev = lev, scal = scal, pvalType = pvalType): MLE = -Infty is capped, along with lower confidence limits #> ~~~~~~~~~~ printing head of all elements of the output list ~~~~~~~~~~ #> $all #>    entity_1      entity_2 entity_1_count_mA entity_2_count_mB obs_cooccur_X #> 1 Ambiguous     Astrocyte               561               557           232 #> 2 Ambiguous Endothelial 1               561               308           136 #> 3 Ambiguous Endothelial 2               561                20             9 #> 4 Ambiguous Endothelial 3               561               102            49 #> 5 Ambiguous     Ependymal               561                47             4 #> 6 Ambiguous    Excitatory               561               504           192 #>   total_N    p_value exp_cooccur alpha_mle  alpha_medianInt conf_level #> 1    1301     0.3657     240.182    -0.105 [-0.111, -0.098]       0.95 #> 2    1301      0.693     132.812     0.055   [0.047, 0.064]       0.95 #> 3    1301          1       8.624     0.077  [-0.021, 0.181]       0.95 #> 4    1301     0.2998      43.983     0.215   [0.194, 0.237]       0.95 #> 5    1301 2.1435e-07      20.267    -2.150 [-2.252, -1.986]       0.95 #> 6    1301     0.0041     217.328    -0.337  [-0.343, -0.33]       0.95 #>          ci_blaker            ci_cp          ci_midQ         ci_midP jaccard #> 1  [-0.331, 0.119]  [-0.333, 0.123]  [-0.327, 0.117] [-0.327, 0.117]   0.262 #> 2  [-0.208, 0.313]  [-0.212, 0.321]  [-0.203, 0.312] [-0.203, 0.313]   0.186 #> 3   [-0.894, 1.04]  [-0.934, 1.061]  [-0.823, 0.959]  [-0.846, 0.98]   0.016 #> 4  [-0.201, 0.625]  [-0.212, 0.641]    [-0.19, 0.62] [-0.192, 0.622]   0.080 #> 5  [-3.27, -1.164]   [-3.5, -1.128] [-3.291, -1.223]  [-3.341, -1.2]   0.007 #> 6 [-0.569, -0.104] [-0.571, -0.104]  [-0.565, -0.11] [-0.565, -0.11]   0.220 #>   sorensen simpson errornote #> 1    0.415   0.417        NA #> 2    0.313   0.442        NA #> 3    0.031   0.450        NA #> 4    0.148   0.480        NA #> 5    0.013   0.085        NA #> 6    0.361   0.381        NA #>  #> $occur_mat #>         Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 Ependymal #> pixel23         1         0             0             0             0         0 #> pixel24         0         0             1             0             0         0 #> pixel25         0         1             0             0             0         0 #> pixel26         0         0             0             0             0         0 #> pixel27         1         0             1             0             0         0 #> pixel28         0         1             0             0             0         0 #>         Excitatory Inhibitory Microglia OD Immature 1 OD Immature 2 OD Mature 1 #> pixel23          0          1         0             0             0           0 #> pixel24          0          1         0             0             0           0 #> pixel25          0          0         0             1             0           0 #> pixel26          1          0         0             0             0           0 #> pixel27          0          0         0             0             0           0 #> pixel28          1          0         0             0             0           0 #>         OD Mature 2 OD Mature 3 OD Mature 4 Pericytes #> pixel23           0           0           0         0 #> pixel24           0           0           0         0 #> pixel25           0           0           0         0 #> pixel26           0           0           0         0 #> pixel27           0           0           0         0 #> pixel28           0           0           0         0 #>  #> $alpha_mle #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte        -0.105        NA            NA            NA            NA #> Endothelial 1     0.055    -0.015            NA            NA            NA #> Endothelial 2     0.077    -0.118         0.779            NA            NA #> Endothelial 3     0.215    -0.029         0.322         1.902            NA #> Ependymal        -2.150    -0.807        -0.143         0.345        -0.667 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $alpha_mle_sig #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte            NA        NA            NA            NA            NA #> Endothelial 1        NA        NA            NA            NA            NA #> Endothelial 2        NA        NA            NA            NA            NA #> Endothelial 3        NA        NA            NA         1.902            NA #> Ependymal         -2.15    -0.807            NA            NA            NA #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $p_value #>                Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous           <NA>      <NA>          <NA>          <NA>            NA #> Astrocyte         0.3657      <NA>          <NA>          <NA>            NA #> Endothelial 1      0.693    0.9475          <NA>          <NA>            NA #> Endothelial 2          1     0.825        0.1079          <NA>            NA #> Endothelial 3     0.2998    0.9173        0.1813         5e-04            NA #> Ependymal     2.1435e-07    0.0159        0.7323             1        0.4274 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous          <NA>       <NA>       <NA>        NA            NA #> Astrocyte          <NA>       <NA>       <NA>        NA            NA #> Endothelial 1      <NA>       <NA>       <NA>        NA            NA #> Endothelial 2      <NA>       <NA>       <NA>        NA            NA #> Endothelial 3      <NA>       <NA>       <NA>        NA            NA #> Ependymal          <NA>       <NA>       <NA>        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $cooccur.null #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte       240.182        NA            NA            NA            NA #> Endothelial 1   132.812   131.865            NA            NA            NA #> Endothelial 2     8.624     8.563         4.735            NA            NA #> Endothelial 3    43.983    43.669        24.148         1.568            NA #> Ependymal        20.267    20.122        11.127         0.723         3.685 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $cooccur.obs #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte           232        NA            NA            NA            NA #> Endothelial 1       136       131            NA            NA            NA #> Endothelial 2         9         8             8            NA            NA #> Endothelial 3        49        43            30             7            NA #> Ependymal             4        12            10             1             2 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $jaccard #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte         0.262        NA            NA            NA            NA #> Endothelial 1     0.186     0.178            NA            NA            NA #> Endothelial 2     0.016     0.014         0.025            NA            NA #> Endothelial 3     0.080     0.070         0.079         0.061            NA #> Ependymal         0.007     0.020         0.029         0.015         0.014 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $jaccard_sig #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte            NA        NA            NA            NA            NA #> Endothelial 1        NA        NA            NA            NA            NA #> Endothelial 2        NA        NA            NA            NA            NA #> Endothelial 3        NA        NA            NA         0.061            NA #> Ependymal         0.007      0.02            NA            NA            NA #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $sorensen #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte         0.415        NA            NA            NA            NA #> Endothelial 1     0.313     0.303            NA            NA            NA #> Endothelial 2     0.031     0.028         0.049            NA            NA #> Endothelial 3     0.148     0.131         0.146         0.115            NA #> Ependymal         0.013     0.040         0.056         0.030         0.027 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $sorensen_sig #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte            NA        NA            NA            NA            NA #> Endothelial 1        NA        NA            NA            NA            NA #> Endothelial 2        NA        NA            NA            NA            NA #> Endothelial 3        NA        NA            NA         0.115            NA #> Ependymal         0.013      0.04            NA            NA            NA #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $simpson #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte         0.417        NA            NA            NA            NA #> Endothelial 1     0.442     0.425            NA            NA            NA #> Endothelial 2     0.450     0.400         0.400            NA            NA #> Endothelial 3     0.480     0.422         0.294          0.35            NA #> Ependymal         0.085     0.255         0.213          0.05         0.043 #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #>  #> $simpson_sig #>               Ambiguous Astrocyte Endothelial 1 Endothelial 2 Endothelial 3 #> Ambiguous            NA        NA            NA            NA            NA #> Astrocyte            NA        NA            NA            NA            NA #> Endothelial 1        NA        NA            NA            NA            NA #> Endothelial 2        NA        NA            NA            NA            NA #> Endothelial 3        NA        NA            NA          0.35            NA #> Ependymal         0.085     0.255            NA            NA            NA #>               Ependymal Excitatory Inhibitory Microglia OD Immature 1 #> Ambiguous            NA         NA         NA        NA            NA #> Astrocyte            NA         NA         NA        NA            NA #> Endothelial 1        NA         NA         NA        NA            NA #> Endothelial 2        NA         NA         NA        NA            NA #> Endothelial 3        NA         NA         NA        NA            NA #> Ependymal            NA         NA         NA        NA            NA #>               OD Immature 2 OD Mature 1 OD Mature 2 OD Mature 3 OD Mature 4 #> Ambiguous                NA          NA          NA          NA          NA #> Astrocyte                NA          NA          NA          NA          NA #> Endothelial 1            NA          NA          NA          NA          NA #> Endothelial 2            NA          NA          NA          NA          NA #> Endothelial 3            NA          NA          NA          NA          NA #> Ependymal                NA          NA          NA          NA          NA #>               Pericytes #> Ambiguous            NA #> Astrocyte            NA #> Endothelial 1        NA #> Endothelial 2        NA #> Endothelial 3        NA #> Ependymal            NA #> ~~~~~~~~~~ COMPLETED: printing head of all elements of the output list ~~~~~~~~~~  # plot maximum likelihood estimates of affinity metric (alpha MLE) CooccurrenceAffinity::plotgg(data = ct_coocc, variable = \"alpha_mle\", legendlimit = \"datarange\") #> you can hide the printed values with show.value=F #> use the argument value.digit to change number of digits and text.size to adjust the text size sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: aarch64-apple-darwin20 (64-bit) #> Running under: macOS Ventura 13.4 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: America/New_York #> tzcode source: internal #>  #> attached base packages: #> [1] stats4    stats     graphics  grDevices utils     datasets  methods   #> [8] base      #>  #> other attached packages: #>  [1] ggplot2_3.5.1               CooccurrenceAffinity_1.0    #>  [3] BiasedUrn_2.0.11            nnSVG_1.4.2                 #>  [5] SpatialExperiment_1.10.0    SingleCellExperiment_1.22.0 #>  [7] SummarizedExperiment_1.30.2 Biobase_2.60.0              #>  [9] GenomicRanges_1.52.1        GenomeInfoDb_1.36.4         #> [11] IRanges_2.34.1              S4Vectors_0.38.2            #> [13] BiocGenerics_0.46.0         MatrixGenerics_1.12.3       #> [15] matrixStats_1.3.0           SEraster_0.99.0             #>  #> loaded via a namespace (and not attached): #>  [1] DBI_1.2.2                 bitops_1.0-7              #>  [3] pbapply_1.7-2             rlang_1.1.3               #>  [5] magrittr_2.0.3            e1071_1.7-14              #>  [7] compiler_4.3.1            DelayedMatrixStats_1.22.6 #>  [9] systemfonts_1.0.6         vctrs_0.6.5               #> [11] pkgconfig_2.0.3           crayon_1.5.2              #> [13] rdist_0.0.5               fastmap_1.1.1             #> [15] magick_2.8.3              XVector_0.40.0            #> [17] labeling_0.4.3            scuttle_1.10.3            #> [19] utf8_1.2.4                BRISC_1.0.5               #> [21] rmarkdown_2.26            ragg_1.3.0                #> [23] purrr_1.0.2               xfun_0.43                 #> [25] zlibbioc_1.46.0           cachem_1.0.8              #> [27] beachmat_2.16.0           jsonlite_1.8.8            #> [29] highr_0.10                reshape_0.8.9             #> [31] rhdf5filters_1.12.1       DelayedArray_0.26.7       #> [33] Rhdf5lib_1.22.1           BiocParallel_1.36.0       #> [35] parallel_4.3.1            R6_2.5.1                  #> [37] bslib_0.7.0               limma_3.56.2              #> [39] jquerylib_0.1.4           Rcpp_1.0.12               #> [41] knitr_1.45                R.utils_2.12.3            #> [43] Matrix_1.6-5              tidyselect_1.2.1          #> [45] rstudioapi_0.16.0         abind_1.4-5               #> [47] yaml_2.3.8                codetools_0.2-20          #> [49] plyr_1.8.9                lattice_0.22-6            #> [51] tibble_3.2.1              withr_3.0.0               #> [53] evaluate_0.23             desc_1.4.3                #> [55] sf_1.0-16                 units_0.8-5               #> [57] proxy_0.4-27              rearrr_0.3.4              #> [59] pillar_1.9.0              KernSmooth_2.23-22        #> [61] generics_0.1.3            RCurl_1.98-1.14           #> [63] sparseMatrixStats_1.12.2  munsell_0.5.1             #> [65] scales_1.3.0              class_7.3-22              #> [67] glue_1.7.0                tools_4.3.1               #> [69] locfit_1.5-9.9            RANN_2.6.1                #> [71] fs_1.6.3                  cowplot_1.1.3             #> [73] rhdf5_2.44.0              grid_4.3.1                #> [75] DropletUtils_1.20.0       edgeR_3.42.4              #> [77] colorspace_2.1-0          GenomeInfoDbData_1.2.10   #> [79] HDF5Array_1.28.1          cli_3.6.2                 #> [81] textshaping_0.3.7         fansi_1.0.6               #> [83] viridisLite_0.4.2         S4Arrays_1.0.6            #> [85] dplyr_1.1.4               gtable_0.3.5              #> [87] R.methodsS3_1.8.2         sass_0.4.9                #> [89] digest_0.6.35             classInt_0.4-10           #> [91] dqrng_0.3.2               farver_2.1.1              #> [93] rjson_0.2.21              memoise_2.0.1             #> [95] htmltools_0.5.8.1         pkgdown_2.0.7             #> [97] R.oo_1.26.0               lifecycle_1.0.4"},{"path":"https://jef.works/SEraster/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gohta Aihara. Author, maintainer. Mayling Chen. Author. Lyla Atta. Author. Jean Fan. Author, reviewer.","code":""},{"path":"https://jef.works/SEraster/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aihara G, Chen M, Atta L, Fan J (2024). SEraster: Rasterization Preprocessing Framework Scalable Spatial Omics Data Analysis. R package version 0.99.0, https://github.com/JEFworks-Lab/SEraster.","code":"@Manual{,   title = {SEraster: Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis},   author = {Gohta Aihara and Mayling Chen and Lyla Atta and Jean Fan},   year = {2024},   note = {R package version 0.99.0},   url = {https://github.com/JEFworks-Lab/SEraster}, }"},{"path":"https://jef.works/SEraster/index.html","id":"spatial-experiments-raster-seraster","dir":"","previous_headings":"","what":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","title":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","text":"SEraster rasterization preprocessing framework aggregates cellular information spatial pixels reduce resource requirements spatial omics data analysis. SEraster R documentation website. Questions, suggestions, problems submitted GitHub issues.","code":""},{"path":"https://jef.works/SEraster/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","text":"SEraster reduces number spatial points spatial omics datasets downstream analysis process rasterization single cells’ gene expression cell-type labels aggregated equally sized pixels based user-defined resolution. , refer particular resolution rasterization side length pixel finer resolution indicates smaller pixel size coarser resolution indicates larger pixel size.","code":""},{"path":"https://jef.works/SEraster/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","text":"install SEraster, currently recommend using remotes:","code":"require(remotes) remotes::install_github('JEFworks-Lab/SEraster')"},{"path":"https://jef.works/SEraster/index.html","id":"tutorials","dir":"","previous_headings":"","what":"Tutorials","title":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","text":"Introduction: Formatting SpatialExperiment Object SEraster Getting Started SEraster","code":""},{"path":"https://jef.works/SEraster/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Rasterization Preprocessing Framework for Scalable Spatial Omics Data Analysis","text":"preprint describing SEraster available bioRxiv: Aihara G. et al. (2024), “SEraster: rasterization preprocessing framework scalable spatial omics data analysis”, bioRxiv","code":""},{"path":"https://jef.works/SEraster/reference/merfish_mousePOA.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocessed MERFISH dataset of the mouse preoptic area for a bregma -0.29 slice \nfrom a female naive animal (Animal ID = 1, Animal Sex = ","title":"Preprocessed MERFISH dataset of the mouse preoptic area for a bregma -0.29 slice \nfrom a female naive animal (Animal ID = 1, Animal Sex = ","text":"Preprocessed MERFISH dataset mouse preoptic area bregma -0.29 slice  female naive animal (Animal ID = 1, Animal Sex = \"Female\",  # Behavior = \"Naive\", Bregma = \"-0.29\").","code":""},{"path":"https://jef.works/SEraster/reference/merfish_mousePOA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocessed MERFISH dataset of the mouse preoptic area for a bregma -0.29 slice \nfrom a female naive animal (Animal ID = 1, Animal Sex = ","text":"","code":"data(\"merfish_mousePOA\")"},{"path":"https://jef.works/SEraster/reference/merfish_mousePOA.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Preprocessed MERFISH dataset of the mouse preoptic area for a bregma -0.29 slice \nfrom a female naive animal (Animal ID = 1, Animal Sex = ","text":"SpatialExperiment object assay slot contains genes--cells  matrix preprocessed gene expression (total RNA counts per cell divided  cell volume scaled 1000) dgCMatrix, spatialCoords slot  contains x,y coordinates cells, colData slot contains bregma,  cell type, neuron type meta data.","code":""},{"path":"https://jef.works/SEraster/reference/merfish_mousePOA.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Preprocessed MERFISH dataset of the mouse preoptic area for a bregma -0.29 slice \nfrom a female naive animal (Animal ID = 1, Animal Sex = ","text":"https://www.science.org/doi/10.1126/science.aau5324","code":""},{"path":"https://jef.works/SEraster/reference/permutateByRotation.html","id":null,"dir":"Reference","previous_headings":"","what":"permutateByRotation — permutateByRotation","title":"permutateByRotation — permutateByRotation","text":"Function permutate given input SpatialExperiment object(s)  rotating x,y coordinates around midrange point. function assumes input provided SpatialExperiment  object list SpatialExperiment objects. input list SpatialExperiment objects,  SpatialExperiment objects rotated around common midrange  point computed based combined x,y coordinates.","code":""},{"path":"https://jef.works/SEraster/reference/permutateByRotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"permutateByRotation — permutateByRotation","text":"","code":"permutateByRotation(input, n_perm = 1, verbose = FALSE)"},{"path":"https://jef.works/SEraster/reference/permutateByRotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"permutateByRotation — permutateByRotation","text":"input SpatialExperiment list: Input data represented  SpatialExperiment list SpatialExperiment.  SpatialExperiment assumed assay slot containing feature (genes) x observation (cells) matrix dgCmatrix matrix spatialCoords slot containing spatial x,y  coordinates observations matrix array. , x,y coordinates assumed  stored column 1 2 spatialCoords, column names spatialCoords  assumed \"x\" \"y\", respectively. n_perm integer: Number permutations. Default = 1. number used compute angles input rotated . verbose logical: Whether display verbose output warning. Default FALSE.","code":""},{"path":"https://jef.works/SEraster/reference/permutateByRotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"permutateByRotation — permutateByRotation","text":"input given SpatialExperiment, output returned  list n_perm  SpatialExperiment objects. SpatialExperiment object updated spatialCoords slot containing spatial x,y coordinates  rotated corresponding angle. assay colData slots inherited. , names() output indicates angles input  rotated . input given list SpatialExperiment,  output returned new list length(input) * n_perm SpatialExperiment objects. SpatialExperiment object  updated spatialCoords slot containing spatial x,y coordinates rotated  corresponding angle. assay colData slots inherited. , names() output indicates dataset names names(input) angles input rotated .","code":""},{"path":"https://jef.works/SEraster/reference/permutateByRotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"permutateByRotation — permutateByRotation","text":"","code":"data(\"merfish_mousePOA\")  # create a list of 3 permutated datasets rotated at 0 (original), 120, and 240 degrees # this output can directly be fed into rasterizeGeneExpression or rasterizeCellType  # functions to rasterize all 3 permutations at once with the same pixel coordinates spe_list <- permutateByRotation(merfish_mousePOA, n_perm = 3)  # create a list of 5 permutated datasets rotated at 0 (original), 72, 144, 216, 288 degrees spe_list <- permutateByRotation(merfish_mousePOA, n_perm = 5)"},{"path":"https://jef.works/SEraster/reference/plotRaster.html","id":null,"dir":"Reference","previous_headings":"","what":"plotRaster — plotRaster","title":"plotRaster — plotRaster","text":"Function based ggplot2::geom_tile visualize rasterized spatial omics dataset represented SpatialExperiment object.","code":""},{"path":"https://jef.works/SEraster/reference/plotRaster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plotRaster — plotRaster","text":"","code":"plotRaster(   input,   assay_name = NULL,   feature_name = \"sum\",   factor_levels = NULL,   showLegend = TRUE,   plotTitle = NULL,   showAxis = FALSE,   ... )"},{"path":"https://jef.works/SEraster/reference/plotRaster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plotRaster — plotRaster","text":"input SpatialExperiment: Input data represented  SpatialExperiment. given SpatialExperiment assumed  assay slot containing features--observations matrix dgCmatrix  matrix colData slot containing sfc_POLYGON geometry  pixels. features--observations matrix assumed either genes  cell types features pixels observations. assay_name character: Name assay slot input  want visualize. argument given, first assay input  visualized. argument useful multiple assays stored  input, want visualize specific assay. Default NULL. feature_name character: Name feature input  want visualize. argument useful want specify feature  want visualize. can also use \"sum\" visualize sum feature  values per observation \"mean\" visualize mean feature values per observation.  Default \"sum\". factor_levels character numeric factor:  optional vector convert plot input data factor. argument  useful want plot categorical/ordinal variables, binarized  occurrence specific cell type. factor_levels fed levels  argument factor function base R. Default NULL. showLegend logical: Boolean show legend. Default TRUE. plotTitle character: optional argument add title  resulting plot. Default NULL. showAxis logical: Boolean show axis title, texts, ticks.  Default FALSE. ... Additional parameters pass ggplot2::scale_fill_viridis_c  argument provided factor_levels ggplot2::scale_fill_viridis_d  vector provided factor_levels. wish use color  maps, recommend overriding resulting ggplot object.","code":""},{"path":"https://jef.works/SEraster/reference/plotRaster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plotRaster — plotRaster","text":"output returned ggplot object, input  visualized ggplot2::geom_sf. pixel plotted based sfc_POLYGON geometry stored colData slot. Coloring pixel represent corresponding  values summarized (sum mean) specific feature (e.g. rasterized gene expression)  per observation (pixel).","code":""},{"path":"https://jef.works/SEraster/reference/plotRaster.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plotRaster — plotRaster","text":"","code":"data(\"merfish_mousePOA\")  # rasterize gene expression out <- rasterizeGeneExpression(merfish_mousePOA, assay_name = \"volnorm\", fun = \"mean\")  # plot total rasterized gene expression per pixel (there is only one assay_name  # in out and default for feature_name argument is \"sum\"; therefore, these arguments  # are not specified) plotRaster(out, name = \"total rasterized gexp\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one.   # plot rasterized expression of a specific gene/feature per pixel plotRaster(out, feature_name = \"Esr1\", name = \"Esr1\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one.   # rasterize cell-type labels with user-defined resolution and hexagonal pixels out <- rasterizeCellType(merfish_mousePOA, col_name = \"celltype\", resolution = 50, square = FALSE, fun = \"sum\")  # plot total cell counts per pixel (there is only one assay_name in out and default  # for feature_name argument is \"sum\"; therefore, these arguments are not specified) # here, let's use additional parameters for ggplot2::scale_fill_viridis_c so  # that it would have a different color scheme from gene expression plots plotRaster(out, name = \"total cell counts\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one.   # plot specific cell type's cell counts per pixel plotRaster(out, feature_name = \"Inhibitory\", name = \"Inhibitory neuron counts\", option = \"inferno\") #> Coordinate system already present. Adding new coordinate system, which will #> replace the existing one."},{"path":"https://jef.works/SEraster/reference/rasterizeCellType.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterizeCellType — rasterizeCellType","title":"rasterizeCellType — rasterizeCellType","text":"Function rasterize cell type labels spatially-resolved  omics data represented SpatialExperiment class. function assumes input provided SpatialExperiment  object list SpatialExperiment objects.","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeCellType.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rasterizeCellType — rasterizeCellType","text":"","code":"rasterizeCellType(   input,   col_name,   resolution = 100,   square = TRUE,   fun = \"sum\",   n_threads = 1,   BPPARAM = NULL,   verbose = FALSE )"},{"path":"https://jef.works/SEraster/reference/rasterizeCellType.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rasterizeCellType — rasterizeCellType","text":"input SpatialExperiment list: Input data represented  SpatialExperiment list SpatialExperiment.  SpatialExperiment assumed colData slot containing cell type  labels observations data frame column spatialCoords slot  containing spatial x,y coordinates observations matrix array. ,  x,y coordinates assumed stored column 1 2 spatialCoords. col_name character: Column name colData object  containing cell type labels observations. input list,  col_name assumed present elements (SpatialExperiment) input. resolution integer double: Resolution refers side  length pixel square pixels distance opposite edges  pixel hexagonal pixels. unit parameter assumed  unit spatial coordinates input data. square logical: TRUE (default), rasterize square pixels. FALSE,  rasterize hexagonal pixels. fun character: \"mean\", pixel value pixel  proportion cell type based one-hot-encoded cell type  labels cells within pixel. \"sum\", pixel value pixel  number cells cell type based one-hot-encoded cell type  labels cells within pixel. n_threads integer: Number threads parallelization. Default = 1.  Inputting argument BPPARAM argument missing set parallel  exeuction back-end BiocParallel::MulticoreParam(workers = n_threads).  recommend setting argument number cores available  (parallel::detectCores(logical = FALSE)). BPPARAM argument  missing, BPPARAM argument override n_threads argument. BPPARAM BiocParallelParam: Optional additional argument parallelization.  argument provided advanced users BiocParallel  flexibility setting parallel-execution back-end. Default NULL.  provided, assumed instance BiocParallelParam. verbose logical: Whether display verbose output warning. Default FALSE","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeCellType.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rasterizeCellType — rasterizeCellType","text":"input given SpatialExperiment, output returned  new SpatialExperiment object assay slot containing  feature (cell types) x observations (pixels) matrix (dgCmatrix), spatialCoords slot containing spatial x,y coordinates pixel centroids, colData slot  containing meta data pixels (number cells aggregated pixel,  cell IDs cells aggregated pixel, pixel type based  square argument, pixel resolution based resolution argument,  pixel geometry sfc_POLYGON). input provided list SpatialExperiment, output returned new list  SpatialExperiment containing information described corresponding  SpatialExperiment. , names(input) inherited output.","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeCellType.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rasterizeCellType — rasterizeCellType","text":"","code":"library(SpatialExperiment) #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians  data(\"merfish_mousePOA\")  # check assay names for this particular SpatialExperiment object (you can see  # that cell-type labels are stored in the \"celltype\" column) head(colData(merfish_mousePOA)) #> DataFrame with 6 rows and 4 columns #>                                         bregma      celltype  neurontype #>                                      <numeric>   <character> <character> #> 6d6b1d59-6f3b-4a9d-b5a4-8c8b073ae025     -0.29   OD Mature 2             #> 76200644-c14a-4cfa-8752-2a02e5f10d20     -0.29 OD Immature 1             #> 6b08ca36-b395-415a-bb34-d7b67550c35d     -0.29    Inhibitory         I-7 #> b9cb9cfb-fff7-426e-8c36-18fe428ca156     -0.29    Excitatory        E-13 #> 982cc0fc-6d11-4dc4-9ffc-c8c0cee48e6d     -0.29   OD Mature 2             #> ee13ce4c-adf8-4602-9a21-23fdf91d28e0     -0.29    Inhibitory         I-7 #>                                        sample_id #>                                      <character> #> 6d6b1d59-6f3b-4a9d-b5a4-8c8b073ae025    sample01 #> 76200644-c14a-4cfa-8752-2a02e5f10d20    sample01 #> 6b08ca36-b395-415a-bb34-d7b67550c35d    sample01 #> b9cb9cfb-fff7-426e-8c36-18fe428ca156    sample01 #> 982cc0fc-6d11-4dc4-9ffc-c8c0cee48e6d    sample01 #> ee13ce4c-adf8-4602-9a21-23fdf91d28e0    sample01  # rasterize a single SpatialExperiment object # make sure to specify the col_name argument out <- rasterizeCellType(merfish_mousePOA, col_name = \"celltype\", fun = \"sum\")  # rasterize a single SpatialExperiment object with user-defined resolution and hexagonal pixels out <- rasterizeCellType(merfish_mousePOA, col_name = \"celltype\", resolution = 200, square = FALSE, fun = \"sum\")  # rasterize a list of SpatialExperiment objects (in this case, permutated datasets  # with 3 different rotations) spe_list <- permutateByRotation(merfish_mousePOA, n_perm = 3) out_list <- rasterizeCellType(spe_list, col_name = \"celltype\", resolution = 100, square = TRUE, fun = \"sum\")"},{"path":"https://jef.works/SEraster/reference/rasterizeGeneExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterizeGeneExpression — rasterizeGeneExpression","title":"rasterizeGeneExpression — rasterizeGeneExpression","text":"Function rasterize feature x observation matrix spatially-resolved  omics data represented SpatialExperiment class. function assumes input provided SpatialExperiment  object list SpatialExperiment objects.","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeGeneExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rasterizeGeneExpression — rasterizeGeneExpression","text":"","code":"rasterizeGeneExpression(   input,   assay_name = NULL,   resolution = 100,   square = TRUE,   fun = \"mean\",   n_threads = 1,   BPPARAM = NULL,   verbose = FALSE )"},{"path":"https://jef.works/SEraster/reference/rasterizeGeneExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rasterizeGeneExpression — rasterizeGeneExpression","text":"input SpatialExperiment list: Input data represented  SpatialExperiment list SpatialExperiment.  SpatialExperiment assumed assay slot containing feature (genes) x observation (cells) matrix dgCmatrix matrix spatialCoords slot containing spatial x,y  coordinates observations matrix array. , x,y coordinates assumed  stored column 1 2 spatialCoords. assay_name character: Name assay slot input  want apply rasterization. argument given, first assay input  rasterized. argument useful raw normalized  assays stored input, want apply rasterization normalized assay.  input list, assay_name assumed present elements  (SpatialExperiment) input. resolution integer double: Resolution refers side  length pixel square pixels distance opposite edges  pixel hexagonal pixels. unit parameter assumed  unit spatial coordinates input data. square logical: TRUE (default), rasterize square pixels. FALSE,  rasterize hexagonal pixels. fun character: \"mean\", pixel value pixel  mean gene expression cells within pixel.  \"sum\", pixel value pixel sum gene expression  cells within pixel. n_threads integer: Number threads parallelization. Default = 1.  Inputting argument BPPARAM argument missing set parallel  exeuction back-end BiocParallel::MulticoreParam(workers = n_threads).  recommend setting argument number cores available  (parallel::detectCores(logical = FALSE)). BPPARAM argument  missing, BPPARAM argument override n_threads argument. BPPARAM BiocParallelParam: Optional additional argument parallelization.  argument provided advanced users BiocParallel  flexibility setting parallel-execution back-end. Default NULL.  provided, assumed instance BiocParallelParam. verbose logical: Whether display verbose output warning. Default FALSE","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeGeneExpression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rasterizeGeneExpression — rasterizeGeneExpression","text":"input given SpatialExperiment, output returned  new SpatialExperiment object assay slot containing  feature (genes) x observations (pixels) matrix (dgCMatrix matrix depending input, see documentation rasterizeMatrix), spatialCoords slot containing spatial x,y coordinates pixel centroids, colData slot  containing meta data pixels (number cells aggregated pixel,  cell IDs cells aggregated pixel, pixel type based  square argument, pixel resolution based resolution argument,  pixel geometry sfc_POLYGON). input provided list SpatialExperiment, output returned new list  SpatialExperiment containing information described corresponding  SpatialExperiment. , names(input) inherited output.","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeGeneExpression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rasterizeGeneExpression — rasterizeGeneExpression","text":"","code":"library(SpatialExperiment)  data(\"merfish_mousePOA\")  # check assay names for this particular SpatialExperiment object (should be \"volnorm\") assayNames(merfish_mousePOA) #> [1] \"volnorm\"  # rasterize a single SpatialExperiment object # make sure to specify the assay_name argument when the input SpatialExperiment  # object has multiple assay names (assay_name is used here as an example) out <- rasterizeGeneExpression(merfish_mousePOA, assay_name = \"volnorm\", fun = \"mean\")  # rasterize a single SpatialExperiment object with user-defined resolution and hexagonal pixels out <- rasterizeGeneExpression(merfish_mousePOA, assay_name = \"volnorm\", resolution = 200, square = FALSE, fun = \"mean\")  # rasterize a list of SpatialExperiment objects (in this case, permutated datasets  # with 3 different rotations) spe_list <- permutateByRotation(merfish_mousePOA, n_perm = 3) out_list <- rasterizeGeneExpression(spe_list, assay_name = \"volnorm\", resolution = 100, square = TRUE, fun = \"mean\")"},{"path":"https://jef.works/SEraster/reference/rasterizeMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterizeMatrix — rasterizeMatrix","title":"rasterizeMatrix — rasterizeMatrix","text":"Function rasterize given input matrix (dense sparse) based given position matrix. function assumes inputs provided dgCmatrix  matrix data matrix position.","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rasterizeMatrix — rasterizeMatrix","text":"","code":"rasterizeMatrix(   data,   pos,   bbox,   resolution = 100,   square = TRUE,   fun = \"mean\",   n_threads = 1,   BPPARAM = NULL,   verbose = TRUE )"},{"path":"https://jef.works/SEraster/reference/rasterizeMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rasterizeMatrix — rasterizeMatrix","text":"data dgCmatrix matrix: Feature x observation matrix represented  dgCmatrix matrix object. Features can genes cell types. case  features cell types, matrix assumed sparse model matrix  rows cell types columns cell IDs. pos matrix: Spatial x,y coordinates observations stored  matrix array. , x,y coordinates assumed stored column 1  2 spatialCoords. bbox bbox numeric: Bounding box rasterization defined  bbox class object (created sf::st_bbox) numeric vector length four, xmin, ymin, xmax  ymax values. Values numeric vector assumed order xmin,  ymin, xmax, ymax. resolution integer double: Resolution refers side  length pixel square pixels distance opposite edges  pixel hexagonal pixels. unit parameter assumed  unit spatial coordinates input data. square logical: TRUE (default), rasterize square pixels. FALSE,  rasterize hexagonal pixels. fun character: \"mean\", pixel value pixel  average gene expression cells within pixel.  \"sum\", pixel value pixel sum gene expression  cells within pixel. n_threads integer: Number threads parallelization. Default = 1.  Inputting argument BPPARAM argument missing set parallel  exeuction back-end BiocParallel::MulticoreParam(workers = n_threads).  recommend setting argument number cores available  (parallel::detectCores(logical = FALSE)). BPPARAM argument  missing, BPPARAM argument override n_threads argument. BPPARAM BiocParallelParam: Optional additional argument parallelization.  argument provided advanced users BiocParallel  flexibility setting parallel-execution back-end. Default NULL.  provided, assumed instance BiocParallelParam. verbose logical: Whether display verbose output warning. Default FALSE","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rasterizeMatrix — rasterizeMatrix","text":"output returned list containing rasterized feature  x observation matrix dgCmatrix data given dgCmatrix matrix data given matrix, spatial x,y coordinates pixel  centroids matrix, data.frame containing meta data pixels  (number cells aggregated pixel, cell IDs cells  aggregated pixel, pixel type based square argument, pixel  resolution based resolution argument, pixel geometry sfc_POLYGON).","code":""},{"path":"https://jef.works/SEraster/reference/rasterizeMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rasterizeMatrix — rasterizeMatrix","text":"","code":"library(SpatialExperiment) library(sf) #> Linking to GEOS 3.11.0, GDAL 3.5.3, PROJ 9.1.0; sf_use_s2() is TRUE  data(\"merfish_mousePOA\") # extract features-by-cells matrix, spatial coordinates from the SpatialExperiment object data <- assay(merfish_mousePOA) pos <- spatialCoords(merfish_mousePOA) # compute bounding box resolution <- 100 bbox <- st_bbox(c(   xmin = floor(min(pos[,1])-resolution/2),    xmax = ceiling(max(pos[,1])+resolution/2),    ymin = floor(min(pos[,2])-resolution/2),    ymax = ceiling(max(pos[,2])+resolution/2) )) # rasterize with mean as the aggregation function out_mean <- rasterizeMatrix(data, pos, bbox, resolution = resolution, fun = \"mean\") # rasterize with sum as the aggregation function out_sum <- rasterizeMatrix(data, pos, bbox, resolution = resolution, fun = \"sum\") # rasterize with user-defined resolution and hexagonal pixels # in this case, you need to update the bbox as well resolution <- 200 bbox <- st_bbox(c(   xmin = floor(min(pos[,1])-resolution/2),    xmax = ceiling(max(pos[,1])+resolution/2),    ymin = floor(min(pos[,2])-resolution/2),    ymax = ceiling(max(pos[,2])+resolution/2) )) out_hex <- rasterizeMatrix(data, pos, bbox, resolution = resolution, square = FALSE, fun = \"mean\")"},{"path":"https://jef.works/SEraster/news/index.html","id":"version-0990-05142024","dir":"Changelog","previous_headings":"","what":"Version 0.99.0 (05/14/2024)","title":"Version 0.99.0 (05/14/2024)","text":"Developmental version Submitted Bioconductor","code":""}]
